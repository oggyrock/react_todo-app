{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoItem","uneditedTitles","setUneditedTitles","todoList","setTodoList","todo","index","list","className","completed","undefined","onDoubleClick","event","clickedTodo","target","id","title","closest","lastChild","focus","type","checked","onChange","onClick","splice","value","onKeyDown","key","trim","onBlur","TodoList","filteredList","map","TodosFilter","filter","filters","setFilter","hidden","length","href","all","active","every","App","useState","setTitle","toggleAll","setToggleAll","useMemo","newTodo","Date","useEffect","localStorage","JSON","parse","stringify","onSubmit","preventDefault","some","placeholder","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85fbb03a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function TodoItem({\n  uneditedTitles,\n  setUneditedTitles,\n  todoList,\n  setTodoList,\n  todo,\n  index,\n}) {\n  const list = [...todoList];\n\n  const handleDoubleClick = (event) => {\n    const clickedTodo = event.target;\n\n    setUneditedTitles({\n      ...uneditedTitles,\n      [todo.id]: todo.title,\n    });\n    clickedTodo.closest('li').className = 'editing';\n    clickedTodo.closest('li').lastChild.focus();\n  };\n\n  const handleToggle = () => {\n    const switchedTodo = todo;\n\n    switchedTodo.completed = !todo.completed;\n    setTodoList([...todoList]);\n  };\n\n  const handleDestroy = () => {\n    todoList.splice(index, 1);\n    setTodoList([...todoList]);\n  };\n\n  const handleEdit = (event) => {\n    list[index].title = event.target.value;\n    setTodoList([...todoList]);\n  };\n\n  const handleKeyDown = (event) => {\n    const clickedTodo = event.target;\n\n    if (event.key === 'Enter') {\n      if (!event.target.value.trim()) {\n        todoList.splice(index, 1);\n        setTodoList([...todoList]);\n      } else {\n        clickedTodo.closest('li').className\n          = todo.completed ? 'completed' : '';\n      }\n    }\n\n    if (event.key === 'Escape') {\n      list[index].title = uneditedTitles[todo.id];\n      setTodoList([...todoList]);\n      clickedTodo.closest('li').className\n        = todo.completed ? 'completed' : '';\n    }\n  };\n\n  const handleBlur = ({ target }) => {\n    const field = target;\n\n    field.closest('li').className\n      = todo.completed ? 'completed' : '';\n  };\n\n  return (\n    <li\n      className={todo.completed ? 'completed' : undefined}\n      onDoubleClick={handleDoubleClick}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={handleToggle}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={handleDestroy}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={todo.title}\n        onChange={handleEdit}\n        onKeyDown={handleKeyDown}\n        onBlur={handleBlur}\n      />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  setUneditedTitles: PropTypes.func.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  uneditedTitles: PropTypes.shape(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\n\nexport function TodoList({\n  filteredList,\n  setUneditedTitles,\n  uneditedTitles,\n  todoList,\n  setTodoList,\n}) {\n  return (\n    <ul className=\"todo-list\">\n      {filteredList.map((todo, index) => (\n        <TodoItem\n          key={todo.id}\n          uneditedTitles={uneditedTitles}\n          setUneditedTitles={setUneditedTitles}\n          todoList={todoList}\n          setTodoList={setTodoList}\n          todo={todo}\n          index={index}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  filteredList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  setTodoList: PropTypes.func.isRequired,\n  setUneditedTitles: PropTypes.func.isRequired,\n  uneditedTitles: PropTypes.shape().isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function TodosFilter({\n  todoList,\n  setTodoList,\n  filter,\n  filters,\n  setFilter,\n}) {\n  return (\n    <footer\n      className=\"footer\"\n      hidden={!todoList.length}\n    >\n      <span className=\"todo-count\">\n        {todoList.filter(todo => !todo.completed).length}\n        {' '}\n        item\n        {todoList.filter(todo => !todo.completed).length !== 1 ? 's ' : ' '}\n        left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === filters.all ? 'selected' : ''}\n            onClick={() => setFilter(filters.all)}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={filter === filters.active ? 'selected' : ''}\n            onClick={() => setFilter(filters.active)}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={filter === filters.completed ? 'selected' : ''}\n            onClick={() => setFilter(filters.completed)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        hidden={todoList.every(todo => !todo.completed)}\n        className=\"clear-completed\"\n        onClick={() => setTodoList(\n          [...todoList.filter(todo => !todo.completed)],\n        )}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nTodosFilter.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTodoList: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  filters: PropTypes.shape(PropTypes.string.isRequired).isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [uneditedTitles, setUneditedTitles] = useState({});\n  const [toggleAll, setToggleAll] = useState(true);\n  const filters = {\n    all: 'All',\n    active: 'Active',\n    completed: 'Completed',\n  };\n  const [todoList, setTodoList] = useState([]);\n  const [filter, setFilter] = useState(filters.all);\n\n  const filteredList = useMemo(() => todoList.filter((todo) => {\n    if (filter === filters.completed) {\n      return todo.completed;\n    }\n\n    if (filter === filters.active) {\n      return !todo.completed;\n    }\n\n    return true;\n  }));\n\n  const newTodo = {\n    id: +new Date(),\n    title: title.trim(),\n    completed: false,\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newTodo.title) {\n      setTodoList([\n        ...todoList,\n        newTodo,\n      ]);\n      setTitle('');\n      setToggleAll(todoList.some(todo => !todo.completed));\n    }\n  };\n\n  const handleToggleAllChange = () => {\n    setToggleAll(!toggleAll);\n    todoList.map((todo, index) => {\n      todoList[index].completed = !toggleAll;\n\n      return { ...todo };\n    });\n    setTodoList([...todoList]);\n  };\n\n  useEffect(() => (\n    localStorage.list && setTodoList(JSON.parse(localStorage.list))\n  ), []);\n\n  useEffect(() => {\n    localStorage.list = JSON.stringify(todoList);\n    setToggleAll(todoList.every(todo => todo.completed));\n  }, [todoList]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <form\n          onSubmit={handleSubmit}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={handleToggleAllChange}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n          hidden={!todoList.length}\n        >\n          Mark all as complete\n        </label>\n        <TodoList\n          filteredList={filteredList}\n          setUneditedTitles={setUneditedTitles}\n          uneditedTitles={uneditedTitles}\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n      </section>\n      <TodosFilter\n        todoList={todoList}\n        setTodoList={setTodoList}\n        filters={filters}\n        filter={filter}\n        setFilter={setFilter}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}