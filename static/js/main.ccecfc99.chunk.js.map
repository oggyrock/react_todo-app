{"version":3,"sources":["App.js","index.js"],"names":["App","useState","title","setTitle","toggleAll","setToggleAll","todoList","setTodoList","newTodo","id","Date","completed","className","onSubmit","event","preventDefault","type","placeholder","value","trimLeft","onChange","target","checked","map","todo","index","htmlFor","key","undefined","onClick","splice","filter","length","href","ReactDOM","render","document","getElementById"],"mappings":"2SA0JeA,MAxJf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGmBJ,mBAAS,IAH5B,mBAGNK,EAHM,KAGIC,EAHJ,KAIPC,EAAU,CACdC,IAAK,IAAIC,KACTR,QACAS,WAAW,GAKb,OACE,6BAASC,UAAU,WACjB,4BAAQA,UAAU,UAChB,yCAEA,0BACEC,SAAU,SAACC,GACTA,EAAMC,iBACNb,GACGK,EAAY,CACbC,GADY,mBAETF,KAELH,EAAS,MAGX,2BACEa,KAAK,OACLJ,UAAU,WACVK,YAAY,yBACZC,MAAOhB,EAAMiB,WACbC,SAAU,SAAAN,GAAK,OAAIX,EAASW,EAAMO,OAAOH,YAK/C,6BAASN,UAAU,QACjB,2BACEI,KAAK,WACLP,GAAG,aACHG,UAAU,aACVU,QAASlB,EACTgB,SAAU,WACRf,GAAcD,GACdE,EAASiB,KAAI,SAACC,EAAMC,GAGlB,OAFAnB,EAASmB,GAAOd,WAAaP,EAEtB,eAAKoB,MAEdjB,EAAY,YAAID,OAGpB,2BAAOoB,QAAQ,cAAf,wBAEA,wBAAId,UAAU,aACXN,EAASiB,KAAI,SAACC,EAAMC,GAAP,OACZ,wBACEE,IAAKH,EAAKf,GACVG,UAAWY,EAAKb,UAAY,iBAAciB,GAE1C,yBAAKhB,UAAU,QACb,2BACEI,KAAK,WACLJ,UAAU,SACVU,QAAShB,EAASmB,GAAOd,UACzBS,SAAU,WACRd,EAASmB,GAAOd,WAAaL,EAASmB,GAAOd,UAC7CJ,EAAY,YAAID,OAGpB,+BAAQkB,EAAKtB,OACb,4BACEc,KAAK,SACLJ,UAAU,UACViB,QAAS,WACPvB,EAASwB,OAAOL,EAAO,GACvBlB,EAAY,YAAID,QAItB,2BAAOU,KAAK,OAAOJ,UAAU,aAGjC,4BACE,yBAAKA,UAAU,QACb,2BAAOI,KAAK,WAAWJ,UAAU,WACjC,0CACA,4BAAQI,KAAK,SAASJ,UAAU,aAElC,2BAAOI,KAAK,OAAOJ,UAAU,UAG/B,wBAAIA,UAAU,aACZ,yBAAKA,UAAU,QACb,2BAAOI,KAAK,WAAWJ,UAAU,WACjC,4CACA,4BAAQI,KAAK,SAASJ,UAAU,aAElC,2BAAOI,KAAK,OAAOJ,UAAU,UAG/B,wBAAIA,UAAU,WACZ,yBAAKA,UAAU,QACb,2BAAOI,KAAK,WAAWJ,UAAU,WACjC,0CACA,4BAAQI,KAAK,SAASJ,UAAU,aAElC,2BAAOI,KAAK,OAAOJ,UAAU,UAG/B,4BACE,yBAAKA,UAAU,QACb,2BAAOI,KAAK,WAAWJ,UAAU,WACjC,6CACA,4BAAQI,KAAK,SAASJ,UAAU,aAElC,2BAAOI,KAAK,OAAOJ,UAAU,YAKnC,4BAAQA,UAAU,UAChB,0BAAMA,UAAU,cACbN,EAASyB,QAAO,SAAAP,GAAI,OAAKA,EAAKb,aAAWqB,OACzC,IAFH,cAMA,wBAAIpB,UAAU,WACZ,4BACE,uBAAGqB,KAAK,KAAKrB,UAAU,YAAvB,QAGF,4BACE,uBAAGqB,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQjB,KAAK,SAASJ,UAAU,mBAAhC,sBCzIRsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ccecfc99.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [toggleAll, setToggleAll] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n  const newTodo = {\n    id: +new Date(),\n    title,\n    completed: false,\n  };\n\n  // console.log(todoList);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            title\n            && setTodoList([\n              newTodo,\n              ...todoList,\n            ]);\n            setTitle('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title.trimLeft()}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={() => {\n            setToggleAll(!toggleAll);\n            todoList.map((todo, index) => {\n              todoList[index].completed = !toggleAll;\n\n              return { ...todo };\n            });\n            setTodoList([...todoList]);\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {todoList.map((todo, index) => (\n            <li\n              key={todo.id}\n              className={todo.completed ? 'completed' : undefined}\n            >\n              <div className=\"view\">\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  checked={todoList[index].completed}\n                  onChange={() => {\n                    todoList[index].completed = !todoList[index].completed;\n                    setTodoList([...todoList]);\n                  }}\n                />\n                <label>{todo.title}</label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={() => {\n                    todoList.splice(index, 1);\n                    setTodoList([...todoList]);\n                  }}\n                />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n          ))}\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        </ul>\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todoList.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}