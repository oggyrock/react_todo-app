{"version":3,"sources":["App.js","index.js"],"names":["App","useState","title","setTitle","toggleAll","setToggleAll","todoList","setTodoList","newTodo","id","Date","completed","useEffect","every","todo","className","onSubmit","event","preventDefault","some","type","placeholder","value","trimLeft","onChange","target","checked","map","index","htmlFor","key","undefined","onClick","splice","filter","length","href","ReactDOM","render","document","getElementById"],"mappings":"2SA4JeA,MA1Jf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGmBJ,mBAAS,IAH5B,mBAGNK,EAHM,KAGIC,EAHJ,KAIPC,EAAU,CACdC,IAAK,IAAIC,KACTR,QACAS,WAAW,GAMb,OAHAC,qBAAU,kBAAMP,EAAaC,EAASO,OAAM,SAAAC,GAAI,OAAIA,EAAKH,gBACvD,CAACL,IAGD,6BAASS,UAAU,WACjB,4BAAQA,UAAU,UAChB,yCAEA,0BACEC,SAAU,SAACC,GACTA,EAAMC,iBACNhB,GACGK,EAAY,CACbC,GADY,mBAETF,KAELH,EAAS,IACTE,EAAaC,EAASa,MAAK,SAAAL,GAAI,OAAKA,EAAKH,gBAG3C,2BACES,KAAK,OACLL,UAAU,WACVM,YAAY,yBACZC,MAAOpB,EAAMqB,WACbC,SAAU,SAAAP,GAAK,OAAId,EAASc,EAAMQ,OAAOH,YAK/C,6BAASP,UAAU,QACjB,2BACEK,KAAK,WACLX,GAAG,aACHM,UAAU,aACVW,QAAStB,EACToB,SAAU,WACRnB,GAAcD,GACdE,EAASqB,KAAI,SAACb,EAAMc,GAGlB,OAFAtB,EAASsB,GAAOjB,WAAaP,EAEtB,eAAKU,MAEdP,EAAY,YAAID,OAGpB,2BAAOuB,QAAQ,cAAf,wBAEA,wBAAId,UAAU,aACXT,EAASqB,KAAI,SAACb,EAAMc,GAAP,OACZ,wBACEE,IAAKhB,EAAKL,GACVM,UAAWD,EAAKH,UAAY,iBAAcoB,GAE1C,yBAAKhB,UAAU,QACb,2BACEK,KAAK,WACLL,UAAU,SACVW,QAASpB,EAASsB,GAAOjB,UACzBa,SAAU,WACRlB,EAASsB,GAAOjB,WAAaL,EAASsB,GAAOjB,UAC7CJ,EAAY,YAAID,OAGpB,+BAAQQ,EAAKZ,OACb,4BACEkB,KAAK,SACLL,UAAU,UACViB,QAAS,WACP1B,EAAS2B,OAAOL,EAAO,GACvBrB,EAAY,YAAID,QAItB,2BAAOc,KAAK,OAAOL,UAAU,aAGjC,4BACE,yBAAKA,UAAU,QACb,2BAAOK,KAAK,WAAWL,UAAU,WACjC,0CACA,4BAAQK,KAAK,SAASL,UAAU,aAElC,2BAAOK,KAAK,OAAOL,UAAU,UAG/B,wBAAIA,UAAU,aACZ,yBAAKA,UAAU,QACb,2BAAOK,KAAK,WAAWL,UAAU,WACjC,4CACA,4BAAQK,KAAK,SAASL,UAAU,aAElC,2BAAOK,KAAK,OAAOL,UAAU,UAG/B,wBAAIA,UAAU,WACZ,yBAAKA,UAAU,QACb,2BAAOK,KAAK,WAAWL,UAAU,WACjC,0CACA,4BAAQK,KAAK,SAASL,UAAU,aAElC,2BAAOK,KAAK,OAAOL,UAAU,UAG/B,4BACE,yBAAKA,UAAU,QACb,2BAAOK,KAAK,WAAWL,UAAU,WACjC,6CACA,4BAAQK,KAAK,SAASL,UAAU,aAElC,2BAAOK,KAAK,OAAOL,UAAU,YAKnC,4BAAQA,UAAU,UAChB,0BAAMA,UAAU,cACbT,EAAS4B,QAAO,SAAApB,GAAI,OAAKA,EAAKH,aAAWwB,OACzC,IAFH,cAMA,wBAAIpB,UAAU,WACZ,4BACE,uBAAGqB,KAAK,KAAKrB,UAAU,YAAvB,QAGF,4BACE,uBAAGqB,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQhB,KAAK,SAASL,UAAU,mBAAhC,sBC3IRsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.48d01c32.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [toggleAll, setToggleAll] = useState(true);\n  const [todoList, setTodoList] = useState([]);\n  const newTodo = {\n    id: +new Date(),\n    title,\n    completed: false,\n  };\n\n  useEffect(() => setToggleAll(todoList.every(todo => todo.completed)),\n    [todoList]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            title\n            && setTodoList([\n              newTodo,\n              ...todoList,\n            ]);\n            setTitle('');\n            setToggleAll(todoList.some(todo => !todo.completed));\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title.trimLeft()}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={() => {\n            setToggleAll(!toggleAll);\n            todoList.map((todo, index) => {\n              todoList[index].completed = !toggleAll;\n\n              return { ...todo };\n            });\n            setTodoList([...todoList]);\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {todoList.map((todo, index) => (\n            <li\n              key={todo.id}\n              className={todo.completed ? 'completed' : undefined}\n            >\n              <div className=\"view\">\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  checked={todoList[index].completed}\n                  onChange={() => {\n                    todoList[index].completed = !todoList[index].completed;\n                    setTodoList([...todoList]);\n                  }}\n                />\n                <label>{todo.title}</label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={() => {\n                    todoList.splice(index, 1);\n                    setTodoList([...todoList]);\n                  }}\n                />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n          ))}\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        </ul>\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todoList.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}